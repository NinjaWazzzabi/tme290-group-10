image: docker:19.03.3
variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_CLI_EXPERIMENTAL: enabled
    PLATFORMS: "linux/amd64,linux/arm64,linux/arm/v6"
services:
    - name: docker:19.03.3-dind
      command: ["--experimental"]
stages:
    - build
    - deploy
before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
build-amd64:
    tags:
        - docker-build
    stage: build
    script:
        - cd custom-dockers && ./build.sh && cd .. && ./build_rover.sh
    only:
        - master
release: 
    tags:
        - docker-build
    stage: deploy
    script:
        - docker run --privileged linuxkit/binfmt:v0.7
        - apk update && apk add curl
        - >
            curl -L "https://github.com/docker/buildx/releases/download/v0.3.1/buildx-v0.3.1.linux-amd64"
            --output "/tmp/docker-buildx" && chmod 755 /tmp/docker-buildx
        - /tmp/docker-buildx create --name multiplatformbuilder
        - /tmp/docker-buildx use multiplatformbuilder

        # Splitting up a small project like this into different repositories
        # will create more overhead for developers. We have our reasons to
        # keep all source in the same repository.
        # - /tmp/docker-buildx build --platform "$PLATFORMS" -t "$CI_REGISTRY_IMAGE":"$CI_COMMIT_TAG" . &&
        #   /tmp/docker-buildx build --platform "$PLATFORMS" -t "$CI_REGISTRY_IMAGE":"$CI_COMMIT_TAG" --push .
        - echo "HELLO I AM ALIVE"

        # ACTION PLANNER
        - /tmp/docker-buildx build --platform "$PLATFORMS" -f action-planner/Dockerfile -t "$CI_REGISTRY_IMAGE":"action-planner-arm" action-planner/ &&
          /tmp/docker-buildx build --platform "$PLATFORMS" -f action-planner/Dockerfile -t "$CI_REGISTRY_IMAGE":"action-planner-arm" --push action-planner/

        # AIMPOINT DRIVER
        - /tmp/docker-buildx build --platform "$PLATFORMS" -f aimpoint-driver/Dockerfile -t "$CI_REGISTRY_IMAGE":"aimpoint-driver-arm" aimpoint-driver/ &&
          /tmp/docker-buildx build --platform "$PLATFORMS" -f aimpoint-driver/Dockerfile -t "$CI_REGISTRY_IMAGE":"aimpoint-driver-arm" --push aimpoint-driver/

        # CONE DETECTION
        - /tmp/docker-buildx build --platform "$PLATFORMS" -f cone-detection/Dockerfile -t "$CI_REGISTRY_IMAGE":"cone-detection-arm" cone-detection/ &&
          /tmp/docker-buildx build --platform "$PLATFORMS" -f cone-detection/Dockerfile -t "$CI_REGISTRY_IMAGE":"cone-detection-arm" --push cone-detection/

        # KIWI DETECTION
        - /tmp/docker-buildx build --platform "$PLATFORMS" -f kiwi-detection/Dockerfile -t "$CI_REGISTRY_IMAGE":"kiwi-detection-arm" kiwi-detection/ &&
          /tmp/docker-buildx build --platform "$PLATFORMS" -f kiwi-detection/Dockerfile -t "$CI_REGISTRY_IMAGE":"kiwi-detection-arm" --push kiwi-detection/
    only:
        - tags
        - /^v[0-9.]+$/
    when: on_success
